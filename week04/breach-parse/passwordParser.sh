#!/bin/bash

if [ "$#" != "3" ]; then
	echo "Password Parser v2: A Breached Domain Parsing Tool by Heath Adams - Updated by w3bguy"
	echo " "
	echo "Usage: passwordParser <absolute input file firectory> <domain to search> <file to output>"
	echo "Example: passwordParser /opt/passwords @gmail.com gmail.txt"
	echo " "
	echo 'For multiple domains: passwordParser <absolute input file firectory> "<domain to search>|<domain to search>" <file to output>'
	echo 'Example: passwordParser /opt/passwords "@gmail.com|@yahoo.com" multiple.txt'
	exit 1

else
	fullFile=$3
        fileDir=$1
	fbName=$(basename "$fullFile" | cut -d. -f1)
	master=$fbName-master.txt
	users=$fbName-users.txt
	passwords=$fbName-passwords.txt
	
	touch $master
	totalFiles=$(find ${fileDir} -type f | wc -l)
	fileCount=0
	
	function progressBar {
		
		let _progress=(${fileCount}*100/${totalFiles}*100)/100
		let _done=(${_progress}*4)/10
		let _left=40-$_done
		
		_fill=$(printf "%${_done}s")
		_empty=$(printf "%${_left}s")
	
		printf "\rProgress : [${_fill// /\#}${_empty// /-}] ${_progress}%%"
	}
	
	find ${fileDir} -type f -print0 | while read -d $'\0' file
	
	do
		grep -a -E "$2" "$file" >> $master
		((++fileCount))
		progressBar ${number} ${totalFiles}
	done
fi

sleep 3

awk -F':' '{print $2}' $master > $users

sleep 1

awk -F':' '{print $3}' $master > $passwords
echo
exit 0
